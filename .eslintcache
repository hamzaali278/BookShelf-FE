[{"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\index.js":"1","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\App.js":"2","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\utils\\setAuthToken.js":"3","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\ConstactState.js":"4","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\AuthState.js":"5","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Navbar.js":"6","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\AlertState.js":"7","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Alerts.js":"8","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\Home.js":"9","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\About.js":"10","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\routing\\PrivateRoute.js":"11","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\AllBooks.js":"12","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\auth\\Login.js":"13","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\auth\\Register.js":"14","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\contactContext.js":"15","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\authContext.js":"16","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\types.js":"17","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\contactReducer.js":"18","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\authReducer.js":"19","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\alertContext.js":"20","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\alertReducer.js":"21","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Modal.js":"22","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactFilter.js":"23","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactForm.js":"24","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\Contacts.js":"25","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactItem.js":"26","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Spinner.js":"27","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\BookShelf.js":"28","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ShelfItem.js":"29","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\AddBook.js":"30"},{"size":207,"mtime":1681287115569,"results":"31","hashOfConfig":"32"},{"size":2210,"mtime":1681458330420,"results":"33","hashOfConfig":"32"},{"size":259,"mtime":1681287115571,"results":"34","hashOfConfig":"32"},{"size":4737,"mtime":1681444630206,"results":"35","hashOfConfig":"32"},{"size":2925,"mtime":1681287115557,"results":"36","hashOfConfig":"32"},{"size":2948,"mtime":1681458692989,"results":"37","hashOfConfig":"32"},{"size":849,"mtime":1681287115552,"results":"38","hashOfConfig":"32"},{"size":970,"mtime":1681287115535,"results":"39","hashOfConfig":"32"},{"size":1197,"mtime":1681458638209,"results":"40","hashOfConfig":"32"},{"size":408,"mtime":1681354166252,"results":"41","hashOfConfig":"32"},{"size":604,"mtime":1681287115550,"results":"42","hashOfConfig":"32"},{"size":1590,"mtime":1681368260442,"results":"43","hashOfConfig":"32"},{"size":2996,"mtime":1681287115524,"results":"44","hashOfConfig":"32"},{"size":3824,"mtime":1681287115526,"results":"45","hashOfConfig":"32"},{"size":117,"mtime":1681287115563,"results":"46","hashOfConfig":"32"},{"size":111,"mtime":1681287115558,"results":"47","hashOfConfig":"32"},{"size":947,"mtime":1681354073487,"results":"48","hashOfConfig":"32"},{"size":2323,"mtime":1681444635811,"results":"49","hashOfConfig":"32"},{"size":1223,"mtime":1681287115559,"results":"50","hashOfConfig":"32"},{"size":113,"mtime":1681287115553,"results":"51","hashOfConfig":"32"},{"size":317,"mtime":1681287115555,"results":"52","hashOfConfig":"32"},{"size":476,"mtime":1681287115537,"results":"53","hashOfConfig":"32"},{"size":898,"mtime":1681287115528,"results":"54","hashOfConfig":"32"},{"size":3457,"mtime":1681446482102,"results":"55","hashOfConfig":"32"},{"size":1680,"mtime":1681361041485,"results":"56","hashOfConfig":"32"},{"size":1850,"mtime":1681454384847,"results":"57","hashOfConfig":"32"},{"size":300,"mtime":1681287115540,"results":"58","hashOfConfig":"32"},{"size":3482,"mtime":1681454149876,"results":"59","hashOfConfig":"32"},{"size":1481,"mtime":1681453883200,"results":"60","hashOfConfig":"32"},{"size":211,"mtime":1681458320705,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1otunpk",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\index.js",[],["136","137"],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\App.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\ConstactState.js",["138","139","140","141"],"import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_ERRORS,\r\n  Move_CURRENT,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n} from \"../types\";\r\n\r\nconst ConstactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/contacts\");\r\n      dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data,\r\n      });\r\n      //\r\n    } catch (error) {\r\n      // alert(\"STATE ERROR : \" + error);\r\n      console.error(error);\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      });\r\n    }\r\n  };\r\n  const getAllContacts = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/contacts/all\");\r\n      // console.log(\"res, \", res)\r\n      return res.data\r\n    } catch (error) {\r\n      // alert(\"STATE ERROR : \" + error);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Add Contact\r\n  const addContact = async (contact) => {\r\n    // console.log('contact state: ', contact)\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios\r\n        .post(\"/api/contacts\", contact, config)\r\n        .catch((err) => {\r\n          if (err.response.status == 400) {\r\n            console.log(err);\r\n            // if (err.response.data.errors) {\r\n            //   err.response.data.errors.map((e) => console.log(e.msg));\r\n            // }\r\n            throw err;\r\n          }\r\n        });\r\n      dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data,\r\n      });\r\n      //\r\n    } catch (error) {\r\n      if (error.response.data.errors) {\r\n        error.response.data.errors.map((e) =>\r\n          dispatch({\r\n            type: CONTACT_ERROR,\r\n            payload: e.msg,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch({\r\n          type: CONTACT_ERROR,\r\n          payload: error.response.data.msg,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update Contact\r\n  const updateContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios\r\n        .put(`api/contacts/${contact._id}`, contact, config)\r\n        .catch((err) => {\r\n          if (err.response.status == 400) {\r\n            throw err;\r\n          }\r\n        });\r\n\r\n      dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete Contact\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/contacts/${id}`);\r\n\r\n      dispatch({\r\n        type: DELETE_CONTACT,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Clear Contacts\r\n  const clearContacts = () => {\r\n    dispatch({ type: CLEAR_CONTACTS });\r\n  };\r\n  const moveCurrent = (contact) => {\r\n    dispatch({ type: Move_CURRENT ,payload: contact});\r\n  };\r\n  // Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Filter Contacts\r\n  const filterContacts = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  // Clear Error\r\n  const clearErrors = () => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        getContacts,\r\n        getAllContacts,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n        clearContacts,\r\n        clearErrors,\r\n        moveCurrent\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ConstactState;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Alerts.js",["142","143","144"],"import React, { useContext } from \"react\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport Modal from \"./Modal\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst customId = \"custom-id-yes\";\r\n\r\nconst Alerts = () => {\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  return (\r\n    /* alertContext.alerts.length > 0 &&\r\n    alertContext.alerts.map((alert) => (\r\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n        <i className=\"fas fa-info-circle\"></i> {alert.msg}\r\n      </div>\r\n    )) */\r\n    <>\r\n      {alertContext.alerts.length > 0 &&\r\n        alertContext.alerts.map((alert) => {\r\n          if (alert.type == \"danger\") {\r\n            toast.error(alert.msg, {\r\n              toastId: customId,\r\n              position: \"bottom-right\",\r\n            });\r\n          }\r\n        })}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\nexport default Alerts;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\Home.js",["145"],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\About.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\AllBooks.js",["146"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\n\r\nconst AllBooks = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { getAllContacts } = contactContext;\r\n\r\n  const [books, setBooks] = useState([])\r\n\r\n  const getAllBooks = async () => {\r\n    const allBooks = await getAllContacts();\r\n    // console.log(\"Books, \", allBooks)\r\n    setBooks(allBooks);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllBooks();\r\n  }, [])\r\n  return (\r\n    <div><h1>Public Books</h1>\r\n      {books?.map((item, index) => {\r\n        return (\r\n          item.type === \"public\" ?\r\n\r\n            <div key={index} className=\"card my-2 bg-white\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"d-inline align-middle card-title text-primary\">\r\n                  {item.bookName}\r\n                </h5>\r\n                <span\r\n                  className={\r\n                    \"badge badge-sm d-inline align-middle mx-auto my-auto float-right \" +\r\n                    (item.type === \"public\" ? \"badge-success\" : \"badge-primary\")\r\n                  }\r\n                >\r\n                  {item.type.charAt(0).toUpperCase() + item.type.slice(1)}\r\n                </span>\r\n              </div>\r\n              <div className=\"card-body m-0 p-0 pl-4 pt-2\">\r\n                <i className=\"fas fa-book\"></i> {item.isbn}\r\n                <br />\r\n                 {item.description}\r\n              </div>\r\n\r\n            </div> : \"\"\r\n\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllBooks","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\auth\\Login.js",["147"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\n// Context\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst Login = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { setAlert } = alertContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { login, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  const contactContext = useContext(ContactContext);\r\n  const {  getAllContacts } = contactContext;\r\n\r\n  // useEffect(() => {\r\n  //   getAllContacts();\r\n  // },[])\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push(\"/\");\r\n    }\r\n\r\n    if (error !== null && error) {\r\n      setAlert(error, \"danger\");\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = user;\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      setAlert(\"Please fill in all fields!\", \"danger\");\r\n    } else {\r\n      login({\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div align=\"center\">\r\n        <h2>\r\n          Account <span className=\"text-primary\">Login</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-2 col-sm-1\"></div>\r\n        <div\r\n          className=\"col-lg-6 col-md-8 col-sm-10 mt-3\"\r\n          // style={{ margin: \"0 auto\", width: \"70%\" }}\r\n        >\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"You Email id\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Your Password\"\r\n                onChange={onChange}\r\n                minLength=\"5\"\r\n                required\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n              className=\"btn btn-primary btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-2 col-sm-1\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\contactContext.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\types.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\contact\\contactReducer.js",["148","149","150"],"import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  CLEAR_CONTACTS,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  CONTACT_ERROR,\r\n  CLEAR_ERRORS,\r\n  Move_CURRENT,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      // alert(\"HI\");\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n        loading: false,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) => {\r\n          return contact._id === action.payload._id ? action.payload : contact;\r\n        }),\r\n        loading: false,\r\n      };\r\n      case Move_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: action.payload,\r\n        };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n        loading: false,\r\n      };\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regexp = new RegExp(`${action.payload}`, \"gi\");\r\n          return (\r\n            contact.bookName.match(regexp) ||\r\n            contact.isbn.match(regexp) ||\r\n            contact.description.match(regexp)\r\n          );\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      // alert(\"CONTACT ERROR\" + action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\auth\\authReducer.js",["151"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      // alert(\"USER_LOADED\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      // alert(`Token : ` + localStorage.getItem(\"token\"));\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      // alert(\"FAIL\");\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\context\\alert\\alertReducer.js",["152"],"import { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Modal.js",["153"],"import React, { useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nconst Modal = () => {\r\n  const onClick = () => {\r\n    toast.success(\"Hi\", {\r\n      autoClose: 3000,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {toast.success(\"Direct\", {\r\n        autoClose: 3000,\r\n      })}\r\n      <button onClick={onClick}>Click</button>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactFilter.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactForm.js",["154"],"import React, { useState, useContext, useEffect } from \"react\";\r\n\r\n//Context\r\nimport contactContext from \"../../context/contact/contactContext\";\r\n\r\nconst ContactForm = () => {\r\n  const ContactContext = useContext(contactContext);\r\n  const { current, addContact, clearCurrent, updateContact } = ContactContext;\r\n\r\n  // [{\r\n  //   name: \"Tabish\",\r\n  //   email: \"hamza@gmail.com\",\r\n  //   phone: \"123456789\",\r\n  //   type: \"public\",\r\n  // }\r\n\r\n  const [contact, setContact] = useState({\r\n    bookName: \"\",\r\n    isbn: \"\",\r\n    description: \"\",\r\n    type: \"public\",\r\n  });\r\n\r\n  const { bookName, isbn, description, type } = contact;\r\n\r\n  useEffect(() => {\r\n    // console.log('current: ', current)\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      // console.log('current null: ', current)\r\n      clearFormFields();\r\n    }\r\n  }, [contactContext, current]);\r\n\r\n  const clearFormFields = () => {\r\n    setContact({\r\n      bookName: \"\",\r\n      isbn: \"\",\r\n      description: \"\",\r\n      type: \"public\",\r\n    });\r\n  };\r\n  \r\n\r\n  const onChange = (e) => {\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (current === null) addContact(contact);\r\n    else updateContact(contact);\r\n\r\n    clearFormFields();\r\n    clearCurrent();\r\n  };\r\n\r\n  const clearAll = (e) => {\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div align=\"center\" className=\"my-3\">\r\n        <h3>{current === null ? \"Add\" : \"Edit\"} Books</h3>\r\n      </div>\r\n      <form className=\"my-2\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"bookName\"\r\n            placeholder=\"Book Name\"\r\n            value={bookName}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"isbn\"\r\n            placeholder=\"ISBN\"\r\n            value={isbn}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Discription\"\r\n            value={description}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        Book Type:{\" \"}\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"public\"\r\n            checked={type === \"public\"}\r\n            onChange={onChange}\r\n          />{\" \"}\r\n          public{\" \"}\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"private\"\r\n            checked={type === \"private\"}\r\n            onChange={onChange}\r\n          />{\" \"}\r\n          Private\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-primary btn-block\">\r\n            {current === null ? \"Add\" : \"Update\"} Book\r\n          </button>\r\n        </div>\r\n        {current && (\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-secondary btn-block\" onClick={clearAll}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\Contacts.js",["155","156"],"import React, { useContext, useEffect } from \"react\";\r\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n// Component\r\nimport ContactItem from \"./ContactItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\n// Context\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered, getContacts, getAllContacts ,loading } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    // getAllContacts();\r\n  }, []);\r\n\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h3>No Books to display!</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {contacts !== null && !loading ? (\r\n        <>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <ContactItem key={contact._id} contact={contact} />\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <ContactItem key={contact._id} contact={contact} />\r\n              ))}\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n      {/* <TransitionGroup>\r\n        {filtered !== null\r\n          ? filtered.map((contact) => (\r\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))\r\n          : contacts.map((contact) => (\r\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))}\r\n      </TransitionGroup> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ContactItem.js",["157"],"import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Context\r\nimport contactContext from \"../../context/contact/contactContext\";\r\n\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  const ContactContext = useContext(contactContext);\r\n  const { deleteContact, setCurrent, clearCurrent,moveCurrent } = ContactContext;\r\n\r\n  const { _id, bookName, isbn, description, type } = contact;\r\n\r\n  const onDelete = (e) => {\r\n    deleteContact(_id);\r\n    clearCurrent();\r\n  };\r\n  const onMove = () => {\r\n    // console.log(contact);\r\n    // moveCurrent(contact)\r\n  }\r\n\r\n  return (\r\n    <div className=\"card my-2 bg-white\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"d-inline align-middle card-title text-primary\">\r\n          {bookName}\r\n        </h5>\r\n        <span\r\n          className={\r\n            \"badge badge-sm d-inline align-middle mx-auto my-auto float-right \" +\r\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </div>\r\n      <div className=\"card-body m-0 p-0 pl-4 pt-2\">\r\n        <i className=\"fas fa-book\"></i> {isbn}\r\n        <br />\r\n        {description}\r\n      </div>\r\n      <div className=\"card-footer bg-white border-0\">\r\n        <button\r\n          className=\"btn btn-sm btn-dark px-4 mr-1\"\r\n          onClick={() => setCurrent(contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-sm btn-danger px-4 mr-1\" onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n        <button className=\"btn btn-sm btn-danger px-4 mr-1\" onClick={onMove}>\r\n          Add to BookShelf\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\BookShelf.js",["158","159","160"],"\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ShelfItem from \"../contacts/ShelfItem\";\r\n// import React from 'react'\r\n\r\nconst BookShelf = () => {\r\n    const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered, getContacts, getAllContacts ,loading } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    // getAllContacts();\r\n  }, []);\r\n\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h3>No Books to display!</h3>;\r\n  }\r\n  return (\r\n    <>\r\n      {contacts !== null && !loading ? (\r\n        <>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <ShelfItem key={contact._id} contact={contact} />\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <ShelfItem key={contact._id} contact={contact} />\r\n              ))}\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n      {/* <TransitionGroup>\r\n        {filtered !== null\r\n          ? filtered.map((contact) => (\r\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))\r\n          : contacts.map((contact) => (\r\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))}\r\n      </TransitionGroup> */}\r\n    </>\r\n  );\r\n}\r\n\r\n// const BookShelf = () => {\r\n//     const contactContext = useContext(ContactContext);\r\n//     const { current,moveCurrent, getContacts,setCurrent } = contactContext;\r\n//     const [book1, setBook] = useState([])\r\n  \r\n//     const getBook =  () => {\r\n    \r\n//       setBook(current);\r\n//     }\r\n  \r\n//     useEffect(() => {\r\n//         if (current !== null) {\r\n//             getBook();\r\n//             console.log(\"current not null\");\r\n//             // console.log(\"adasd\");\r\n//         }\r\n//         else {\r\n//             console.log(\"null\");\r\n//         }\r\n//         // console.log(\"move current :\", moveCurrent);\r\n//         // console.log(\"set current :\",setCurrent);\r\n//     }, [contactContext,moveCurrent])\r\n//     return (\r\n//       <div><h1>BookShelf</h1>\r\n//         {book1?.map((item, index) => {\r\n//         return (\r\n//           item.type === \"public\" ?\r\n\r\n//             <div key={index} className=\"card my-2 bg-white\">\r\n//               <div className=\"card-header\">\r\n//                 <h5 className=\"d-inline align-middle card-title text-primary\">\r\n//                   {item.bookName}\r\n//                 </h5>\r\n//                 <span\r\n//                   className={\r\n//                     \"badge badge-sm d-inline align-middle mx-auto my-auto float-right \" +\r\n//                     (item.type === \"public\" ? \"badge-success\" : \"badge-primary\")\r\n//                   }\r\n//                 >\r\n//                   {item.type.charAt(0).toUpperCase() + item.type.slice(1)}\r\n//                 </span>\r\n//               </div>\r\n//               <div className=\"card-body m-0 p-0 pl-4 pt-2\">\r\n//                 <i className=\"fas fa-book\"></i> {item.isbn}\r\n//                 <br />\r\n//                  {item.description}\r\n//               </div>\r\n\r\n//             </div> : \"\"\r\n\r\n//         )\r\n//       })}\r\n//       </div>\r\n//     )\r\n// }\r\n\r\nexport default BookShelf","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\contacts\\ShelfItem.js",["161","162","163","164","165","166"],"import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Context\r\nimport contactContext from \"../../context/contact/contactContext\";\r\n\r\n\r\nconst ShelfItem = ({ contact }) => {\r\n  const ContactContext = useContext(contactContext);\r\n  const { deleteContact, setCurrent, clearCurrent,moveCurrent } = ContactContext;\r\n\r\n  const { _id, bookName, isbn, description, type } = contact;\r\n\r\n  \r\n  const onMove = () => {\r\n    // console.log(contact);\r\n    // moveCurrent(contact)\r\n  }\r\n\r\n  return (\r\n    <div className=\"card my-2 bg-white\">\r\n      <div className=\"card-header\">\r\n        <h5 className=\"d-inline align-middle card-title text-primary\">\r\n          {bookName}\r\n        </h5>\r\n        <span\r\n          className={\r\n            \"badge badge-sm d-inline align-middle mx-auto my-auto float-right \" +\r\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </div>\r\n      <div className=\"card-body m-0 p-0 pl-4 pt-2\">\r\n        <i className=\"fas fa-book\"></i> {isbn}\r\n        <br />\r\n        {description}\r\n      </div>\r\n      <div className=\"card-footer bg-white border-0\">\r\n        \r\n        <button className=\"btn btn-sm btn-danger px-4 mr-1\" >\r\n          Remove From Shelf\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShelfItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ShelfItem;\r\n","C:\\Users\\chham\\Desktop\\ContactApp latest\\client\\src\\components\\pages\\AddBook.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":19,"column":3,"nodeType":"173","messageId":"174","endLine":19,"endColumn":12},{"ruleId":"171","severity":1,"message":"175","line":20,"column":3,"nodeType":"173","messageId":"174","endLine":20,"endColumn":15},{"ruleId":"176","severity":1,"message":"177","line":75,"column":35,"nodeType":"178","messageId":"179","endLine":75,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":117,"column":35,"nodeType":"178","messageId":"179","endLine":117,"endColumn":37},{"ruleId":"171","severity":1,"message":"180","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":22,"column":41,"nodeType":"183","messageId":"184","endLine":22,"endColumn":43},{"ruleId":"176","severity":1,"message":"177","line":23,"column":26,"nodeType":"178","messageId":"179","endLine":23,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":29,"column":6,"nodeType":"187","endLine":29,"endColumn":13,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":19,"column":6,"nodeType":"187","endLine":19,"endColumn":8,"suggestions":"190"},{"ruleId":"171","severity":1,"message":"191","line":16,"column":12,"nodeType":"173","messageId":"174","endLine":16,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":11,"column":3,"nodeType":"173","messageId":"174","endLine":11,"endColumn":12},{"ruleId":"171","severity":1,"message":"175","line":12,"column":3,"nodeType":"173","messageId":"174","endLine":12,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":18,"column":1,"nodeType":"194","endLine":103,"endColumn":3},{"ruleId":"192","severity":1,"message":"193","line":12,"column":1,"nodeType":"194","endLine":55,"endColumn":3},{"ruleId":"192","severity":1,"message":"193","line":3,"column":1,"nodeType":"194","endLine":12,"endColumn":3},{"ruleId":"171","severity":1,"message":"195","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"196","line":34,"column":6,"nodeType":"187","endLine":34,"endColumn":31,"suggestions":"197"},{"ruleId":"171","severity":1,"message":"191","line":14,"column":44,"nodeType":"173","messageId":"174","endLine":14,"endColumn":58},{"ruleId":"185","severity":1,"message":"198","line":19,"column":6,"nodeType":"187","endLine":19,"endColumn":8,"suggestions":"199"},{"ruleId":"171","severity":1,"message":"200","line":10,"column":51,"nodeType":"173","messageId":"174","endLine":10,"endColumn":62},{"ruleId":"171","severity":1,"message":"201","line":2,"column":40,"nodeType":"173","messageId":"174","endLine":2,"endColumn":48},{"ruleId":"171","severity":1,"message":"191","line":11,"column":44,"nodeType":"173","messageId":"174","endLine":11,"endColumn":58},{"ruleId":"185","severity":1,"message":"198","line":16,"column":6,"nodeType":"187","endLine":16,"endColumn":8,"suggestions":"202"},{"ruleId":"171","severity":1,"message":"203","line":10,"column":11,"nodeType":"173","messageId":"174","endLine":10,"endColumn":24},{"ruleId":"171","severity":1,"message":"204","line":10,"column":26,"nodeType":"173","messageId":"174","endLine":10,"endColumn":36},{"ruleId":"171","severity":1,"message":"205","line":10,"column":38,"nodeType":"173","messageId":"174","endLine":10,"endColumn":50},{"ruleId":"171","severity":1,"message":"200","line":10,"column":51,"nodeType":"173","messageId":"174","endLine":10,"endColumn":62},{"ruleId":"171","severity":1,"message":"206","line":12,"column":11,"nodeType":"173","messageId":"174","endLine":12,"endColumn":14},{"ruleId":"171","severity":1,"message":"207","line":15,"column":9,"nodeType":"173","messageId":"174","endLine":15,"endColumn":15},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'SET_ALERT' is defined but never used.","Identifier","unusedVar","'REMOVE_ALERT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authContext', 'clearErrors', and 'setAlert'. Either include them or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.",["211"],"'getAllContacts' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'contactContext'. Either exclude it or remove the dependency array. Outer scope values like 'contactContext' aren't valid dependencies because mutating them doesn't re-render the component.",["212"],"React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.",["213"],"'moveCurrent' is assigned a value but never used.","'useState' is defined but never used.",["214"],"'deleteContact' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'clearCurrent' is assigned a value but never used.","'_id' is assigned a value but never used.","'onMove' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},"Update the dependencies array to be: [authContext, clearErrors, error, setAlert]",{"range":"224","text":"225"},"Update the dependencies array to be: [getAllBooks]",{"range":"226","text":"227"},"Update the dependencies array to be: [current]",{"range":"228","text":"229"},"Update the dependencies array to be: [getContacts]",{"range":"230","text":"231"},{"range":"232","text":"231"},[858,865],"[authContext, clearErrors, error, setAlert]",[511,513],"[getAllBooks]",[853,878],"[current]",[560,562],"[getContacts]",[504,506]]