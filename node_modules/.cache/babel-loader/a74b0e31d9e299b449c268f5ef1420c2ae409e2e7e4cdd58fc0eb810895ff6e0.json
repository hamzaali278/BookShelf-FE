{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chham\\\\Desktop\\\\ContactApp latest\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n// Component\nimport ContactItem from \"./ContactItem\";\nimport Spinner from \"../layout/Spinner\";\n\n// Context\nimport ContactContext from \"../../context/contact/contactContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const contactContext = useContext(ContactContext);\n\n  // const { contacts, filtered, getContacts, getAllContacts ,loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // getAllContacts();\n  }, []);\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No contacts to display!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: contacts !== null && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n        contact: contact\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n        contact: contact\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Contacts, \"TDwhgIW1z1K2LcG8WJHCH34hzH8=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useContext","useEffect","ContactItem","Spinner","ContactContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Contacts","_s","contactContext","getContacts","contacts","length","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","filtered","map","contact","_id","_c","$RefreshReg$"],"sources":["C:/Users/chham/Desktop/ContactApp latest/client/src/components/contacts/Contacts.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\n// import { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n// Component\nimport ContactItem from \"./ContactItem\";\nimport Spinner from \"../layout/Spinner\";\n\n// Context\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  // const { contacts, filtered, getContacts, getAllContacts ,loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // getAllContacts();\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h3>No contacts to display!</h3>;\n  }\n\n  return (\n    <>\n      {contacts !== null && !loading ? (\n        <>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <ContactItem key={contact._id} contact={contact} />\n              ))\n            : contacts.map((contact) => (\n                <ContactItem key={contact._id} contact={contact} />\n              ))}\n        </>\n      ) : (\n        <Spinner />\n      )}\n      {/* <TransitionGroup>\n        {filtered !== null\n          ? filtered.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))\n          : contacts.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup> */}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD;;AAEA;AACA,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,mBAAmB;;AAEvC;AACA,OAAOC,cAAc,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,cAAc,GAAGX,UAAU,CAACI,cAAc,CAAC;;EAEjD;;EAEAH,SAAS,CAAC,MAAM;IACdW,WAAW,EAAE;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,IAAI,CAACC,OAAO,EAAE;IAC1D,oBAAOT,OAAA;MAAAU,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EACzC;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGH,QAAQ,KAAK,IAAI,IAAI,CAACE,OAAO,gBAC5BT,OAAA,CAAAE,SAAA;MAAAQ,QAAA,EACGK,QAAQ,KAAK,IAAI,GACdA,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACnBjB,OAAA,CAACJ,WAAW;QAAmBqB,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9B,CAAC,GACFP,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACnBjB,OAAA,CAACJ,WAAW;QAAmBqB,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9B;IAAC,iBACL,gBAEHd,OAAA,CAACH,OAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACT,iBAcA;AAEP,CAAC;AAACV,EAAA,CA5CID,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}