{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chham\\\\Desktop\\\\ContactApp latest\\\\client\\\\src\\\\context\\\\contact\\\\ConstactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_ERRORS, SET_ALERT, REMOVE_ALERT } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConstactState = props => {\n  _s();\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n      //\n    } catch (error) {\n      // alert(\"STATE ERROR : \" + error);\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  };\n  const getAllContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts/all\");\n      // console.log(\"res, \", res)\n      return res.data;\n    } catch (error) {\n      // alert(\"STATE ERROR : \" + error);\n      console.error(error);\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      console.log(res.data).catch(err => {\n        if (err.response.status == 400) {\n          console.log(err);\n          // if (err.response.data.errors) {\n          //   err.response.data.errors.map((e) => console.log(e.msg));\n          // }\n          throw err;\n        }\n      });\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n      //\n    } catch (error) {\n      if (error.response.data.errors) {\n        error.response.data.errors.map(e => dispatch({\n          type: CONTACT_ERROR,\n          payload: e.msg\n        }));\n      } else {\n        dispatch({\n          type: CONTACT_ERROR,\n          payload: error.response.data.msg\n        });\n      }\n    }\n  };\n\n  // Update Contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.put(`api/contacts/${contact._id}`, contact, config).catch(err => {\n        if (err.response.status == 400) {\n          throw err;\n        }\n      });\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  // Clear Error\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      getContacts,\n      getAllContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      clearContacts,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ConstactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ConstactState;\nexport default ConstactState;\nvar _c;\n$RefreshReg$(_c, \"ConstactState\");","map":{"version":3,"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_ERRORS","SET_ALERT","REMOVE_ALERT","jsxDEV","_jsxDEV","ConstactState","props","_s","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","console","response","msg","getAllContacts","addContact","contact","config","headers","post","log","catch","err","status","errors","map","e","updateContact","put","_id","deleteContact","id","delete","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","clearErrors","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chham/Desktop/ContactApp latest/client/src/context/contact/ConstactState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\n\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_ERRORS,\n  SET_ALERT,\n  REMOVE_ALERT,\n} from \"../types\";\n\nconst ConstactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data,\n      });\n      //\n    } catch (error) {\n      // alert(\"STATE ERROR : \" + error);\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg,\n      });\n    }\n  };\n  const getAllContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts/all\");\n      // console.log(\"res, \", res)\n      return res.data\n    } catch (error) {\n      // alert(\"STATE ERROR : \" + error);\n      console.error(error);\n    }\n  };\n\n  // Add Contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios\n        .post(\"/api/contacts\", contact, config)\n        console.log(res.data)\n        .catch((err) => {\n          if (err.response.status == 400) {\n            console.log(err);\n            // if (err.response.data.errors) {\n            //   err.response.data.errors.map((e) => console.log(e.msg));\n            // }\n            throw err;\n          }\n        });\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n      });\n      //\n    } catch (error) {\n      if (error.response.data.errors) {\n        error.response.data.errors.map((e) =>\n          dispatch({\n            type: CONTACT_ERROR,\n            payload: e.msg,\n          })\n        );\n      } else {\n        dispatch({\n          type: CONTACT_ERROR,\n          payload: error.response.data.msg,\n        });\n      }\n    }\n  };\n\n  // Update Contact\n  const updateContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios\n        .put(`api/contacts/${contact._id}`, contact, config)\n        .catch((err) => {\n          if (err.response.status == 400) {\n            throw err;\n          }\n        });\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg,\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg,\n      });\n    }\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  // Clear Error\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        getContacts,\n        getAllContacts,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        clearContacts,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ConstactState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}